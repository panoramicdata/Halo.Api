name: Build and Publish NuGet Package

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

env:
  DOTNET_VERSION: '9.0.x'  # Use .NET 9 (stable) instead of .NET 10 (preview)
  CONFIGURATION: 'Release'
  
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for GitVersioning
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
      
    - name: Pack NuGet package
      run: dotnet pack Halo.Api/Halo.Api.csproj --configuration ${{ env.CONFIGURATION }} --no-build --output ./artifacts
      
    - name: Upload NuGet package artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts/*.nupkg
        
    - name: Publish to NuGet.org
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          ### Features
          - See commit history for detailed changes
          
          ### NuGet Package
          This release is available on NuGet.org as `HaloPsa.Api` version ${{ github.ref_name }}
          
          ```
          dotnet add package HaloPsa.Api --version ${{ github.ref_name }}
          ```
          
          ### Installation
          ```csharp
          var client = new HaloClient(new HaloClientOptions
          {
              HaloAccount = "your-account",
              HaloClientId = "your-client-id",
              HaloClientSecret = "your-client-secret"
          });
          
          // Use the client
          var tickets = await client.Psa.Tickets.GetAllAsync(cancellationToken);
          ```
        draft: false
        prerelease: false